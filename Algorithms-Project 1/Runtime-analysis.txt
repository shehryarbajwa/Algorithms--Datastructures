Run-time analysis:

Task0:

The run time for each query is going to be O(1) since both print statements require lookups and not iterating over the 2D array
The average run time will be O(1)

Task1:

The run time for the outer loop is going to be O(n) since it is going to iterate over each call in the calls array. The run time for the inner if loop is also going to be O(n) since  the if loop will keep on iterating till it has found the key or exhausted the array.

Task2:

The run time for the for in loop is going to be O(n). Then each if loop will execute in constant time O(1). The second for loop would run in O(n) while the nested if loop in constant time. The run time for the entire algorithm is going to be O(n)

Task3:

In iterating over each call in calls, it will be run in O(n). Then checking if number from Bangalore will be in constant time O(1), again checking area codes will be in constant time. Iterating over the areaCodesList will be done in O(n) while appending again will be done in constant time. The sorting method used by python is Timsort which will run in O(n log n). The total run time will be O(n * (1 + 1 + n) + n * log n) which will reduce to O(n^2) ignoring the constants and the n log n since n^2 will dominate the run time.

Task4:

Iterating over each call will be done in O(n) and the nested if loop will be done in O(n). Removing an element from the array will require iterating through the entire array and finding the element to remove and then removing it again having a run time of O(n). Sorting will be done in O(n * log n).
O(n^2) will dominate and the total run time will be O(n^2)
